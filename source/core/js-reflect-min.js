/*!
 * @project JSDK JavaScript Development Kit
 * @copyright Copyright(c) 2004-2012, Dragonfly.org. All rights reserved.
 * @license LGPLv3
 * 
 * @version 0.1
 * @author feng.chun
 * @date 2007-7-20
 * 
 * @requires /core/js-core.js
 */
js.lang.System.namespace("js.reflect");js.reflect.Class=function(className,instance){if(!js.lang.System.isString(className)){throw new TypeError("[js.reflect.Class]The reflect className not a string.");}this._name=className||"";this._simpleName=this._name.slice(this._name.lastIndexOf(".")+1);this._namespace=this._name.slice(0,this._name.lastIndexOf("."));if(this._namespace.startsWith("js.reflect")){throw new TypeError("[js.reflect.Class]The reflect classes not be reflected.");}this._class=eval(className);if(!this._name||!this._class||typeof this._class!="function"){throw new TypeError("[js.reflect.Class]The Class<"+this._name+"> not found.");}try{this._instance=instance||this.newInstance();}catch(e){this._instance={},this._mode="mock";var string=this._class.toString(),matches=string.match(/this.\S+\s*=\s*function|this.\S+\s*=/gi);if(matches){for(var i=0,len=matches.length;i<len;i++){this._instance[matches[i].between("this.","=").trim()]=matches[i].endsWith("function")?"function":"field";}}var pt=this._class.prototype;for(k in pt){if(k!="constructor"){this._instance[k]=typeof pt[k]=="function"?"function":"field";}}}};js.reflect.Class.prototype=(function(){return{getName:function(){return this._name;},getSimpleName:function(){return this._simpleName;},getNamespace:function(){return this._namespace;},getSuperclass:function(){return this._class.superclass;},getConstructor:function(){return this._class.constructor;},getClass:function(){return this._class;},newInstance:function(){var a=function(){};a.prototype=this._class.prototype;var b=new a();this._class.apply(b,arguments);return b;},getField:function(a){if(!this.isField(a)){throw new TypeError("[js.reflect.Class#getField]The Field<"+a+"> not be found.");}return new js.reflect.Field(a,this);},getFields:function(){var a=[];for(k in this._instance){if(this._isField(k)){a.push(new js.reflect.Field(k,this));}}return a;},getMethod:function(a){if(!this.isMethod(a)){throw new TypeError("[js.reflect.Class#getMethod]The Method<"+a+"> not be found.");}return new js.reflect.Method(a,this);},getMethods:function(){var a=[];for(k in this._instance){if(this._isMethod(k)){a.push(new js.reflect.Method(k,this));}}return a;},isMember:function(a){if(!a||a=="constructor"){return false;}return a in this._instance;},_isField:function(a){return this._mode=="mock"?this._instance[a]=="field":typeof this._instance[a]!="function";},_isMethod:function(a){if(a=="constructor"){return false;}return this._mode=="mock"?this._instance[a]=="function":typeof this._instance[a]=="function";},isField:function(a){if(!this.isMember(a)){return false;}return this._isField(a);},isMethod:function(a){if(!this.isMember(a)){return false;}return this._isMethod(a);}};})();js.reflect.Class.forName=function(a){return new js.reflect.Class(a);};js.reflect.Method=function(a){if(!a){throw new TypeError("[js.reflect.Method]The Method must not empty.");}this._name=a;};js.reflect.Method.prototype={getName:function(){return this._name;},invoke:function(b,a){if(!b){throw new TypeError("[js.reflect.Method#invoke]The object is null.");}if(!this._name in b){throw new TypeError("[js.reflect.Method#invoke]The Method<"+this._name+"> not be found.");}return b[this._name].apply(b,[].slice.call(arguments,1));}};js.reflect.Field=function(a){if(!a){throw new TypeError("[js.reflect.Field]The Field must not empty.");}this._name=a;};js.reflect.Field.prototype={getName:function(){return this._name;},set:function(b,a){if(!b){throw new TypeError("[js.reflect.Field#set]The object is null.");}if(!this._name in b){throw new TypeError("[js.reflect.Field#set]The Field<"+this._name+"> not be found.");}b[this._name]=a;},get:function(a){if(!a){throw new TypeError("[js.reflect.Field#get]The object is null.");}if(!this._name in a){throw new TypeError("[js.reflect.Field#set]The Field<"+this._name+"> not be found.");}return a[this._name];}};